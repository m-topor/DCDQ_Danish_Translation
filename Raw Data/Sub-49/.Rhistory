caption = "Descriptives table 1"
)
apa_table(
descriptives,
col_spanners = list(`Age` = c(4,5), `BDI` = c(6,7)),
col.names = c("Surgery", "Reason", "$n$ females", "$M$", "$SD$", "$M$", "$SD$"),
caption = "Descriptives table 2"
)
# Correlation
correlation <- cor.test(cosData$BDI, cosData$Post_QoL)
correlation_apa <- apa_print(correlation)
apa_table(correlation_apa$table)
idependent_t <- t.test(Post_QoL~Surgery,
data = cosData,
paired = FALSE)
independent_t_apa <- apa_print(idependent_t)
dependent_t <- t.test(cosData$Post_QoL,
cosData$Base_QoL,
paired = TRUE)
dependent_t_apa <- apa_print(dependent_t)
factAncova <- aov_car(Post_QoL~Surgery*Reason+Base_QoL+Error(ID),
data = cosData)
factAncova_apa <- apa_print(factAncova)
apa_table(
factAncova_apa$table
, caption = "(ref:anova-table-caption)"
, note = "(ref:anova-table-note)"
)
apa_beeplot(
data = cosData
, id = "ID"
, dv = "Post_QoL"
, factors = c("Surgery", "Reason")
)
afex_plot(factAncova,
x = "Surgery",
trace = "Reason") +
theme_apa()
afex_plot(factAncova,
x = "Surgery",
trace = "Reason",
dodge = 0.7,
mapping = c("shape", "fill"),
data_geom = ggpol::geom_boxjitter,
data_arg = list(
width = 0.5,
jitter.params = list(width = 0, height = 10),
outlier.intersect = TRUE),
point_arg = list(size = 2.5),
line_arg = list(linetype = 0),
error_arg = list(linewidth = 1.5, width = 0),
factor_levels = list(Surgery = c("Knife", "Laser"),
Reason = c("Fun", "Appearance"))) +
labs(title = "Nice plot", y = "Quality of life") +
theme_apa()
afex_plot(factAncova,
x = "Surgery",
trace = "Reason",
dodge = 0.7,
mapping = c("shape", "fill"),
data_geom = ggpol::geom_boxjitter,
data_arg = list(
width = 0.5,
jitter.params = list(width = 0, height = 10),
outlier.intersect = TRUE),
point_arg = list(size = 2.5),
line_arg = list(linetype = 0),
error_arg = list(linewidth = 1.5, width = 0),
factor_levels = list(Surgery = c("Knife", "Laser"),
Reason = c("Fun", "Appearance"))) +
labs(title = "Nice plot", y = "Quality of life") +
# scale_fill_manual(values=c(ThemePark::barbie_theme_colors["light"], ThemePark::barbie_theme_colors["dark"])) +
scale_fill_manual(values=c("#eeb4d7ff" , "#bf2986ff" )) +
ThemePark::theme_barbie()
lm_Post_QoL <- lm(Post_QoL~Surgery*Reason+Base_QoL,
data = cosData)
apa_lm_Post_QoL <- apa_print(lm_Post_QoL)
apa_table(
apa_lm_Post_QoL$table
, caption = "Regression table"
, note = "(ref:anova-table-note)"
)
cosData %>%
pivot_longer(cols = c("Post_QoL", "Base_QoL"), names_to = "name", values_to = "value") %>%
ggplot(aes(x = name, y = value, color = Surgery)) +
geom_point() +
geom_line(aes(group= ID)) +
facet_wrap(facets = vars(Reason))
library(tidyverse)
setwd("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data")
participants <- read.csv("participants.csv")
participants$sex <- NA
participants$age <- NA
participants$multilingual <- NA
participants$handedness <- NA
participants$dev_cond <- NA
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
demo_file <- paste(sub, "Demo", sep="_")
sub_demo <- read.csv(paste(demo_file, "csv", sep="."))
participants$sex[i] <- sub_demo$Sex
participants$age[i] <- sub_demo$Age
participants$multilingual[i] <- sub_demo$Multilingual
participants$handedness[i] <- sub_demo$Handedness
participants$dev_cond[i] <- sub_demo$Dev_cond
}
View(participants)
#The gender marker for female was "F" and was read in as FALSE so this needs to be corrected
participants$sex[participants$sex == "FALSE"] <- "F"
sum(participants$sex == "F")
sum(participants$sex == "M")
mean(participants$age)
sd(participants$age)
sum(participants$multilingual)
sum(participants$handedness == "R") + sum(participants$handedness == "r")
#Add DCDQ scores
participants$DCDQ <- NA
i=1
participants$ID[i]
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
View(sub_DCDQ)
rowSums(sub_DCDQ)
rowSums(sub_DCDQ[1])
rowSums(sub_DCDQ[1,])
rowSums(sub_DCDQ[1,2:9])
4 + 4 + 5 + 5 + 5 + 4 + 4 + 5 + 5 + 4 + 4 + 4 + 4 + 5 + 4
rowSums(sub_DCDQ[1,2:16])
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,2:16])
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,2:16])
}
i=2
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
rowSums(sub_DCDQ[1,2:16])
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,2:16])
i=3
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
length <- 0
length(sub_DCDQ)
length[i] <- length(sub_DCDQ)
length
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,3:16])
length[i] <- length(sub_DCDQ)
}
length
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,3:17])
length[i] <- length(sub_DCDQ)
}
rowSums(sub_DCDQ[1,3:17])
i=2
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,3:17])
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,3:17])
participants$DCDQ[i]
View(participants)
1/36
View(sub_DCDQ)
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
Flam_file <- paste(sub, "Flam", sep="_")
sub_Flam <- read.csv(paste(Flam_file, "csv", sep="."))
participants$Flam_R_Num <- NA
participants$Flam_L_Num <- NA
participants$Flam_R_Time <- NA
participants$Flam_L_Time <- NA
participants$Flam_R_Num[i] <- sub_Flam$R_Num
participants$Flam_L_Num[i] <- sub_Flam$Left_Num
participants$Flam_R_Time[i] <- sub_Flam$R_Time
participants$Flam_L_Time[i] <- sub_Flam$Left_Time
participants$Peg_R_Time <- NA
participants$Peg_L_Time <- NA
Peg_file <- paste(sub, "Peg", sep="_")
sub_Peg <- read.csv(paste(Peg_file, "csv", sep="."))
participants$Peg_R_Time[i] <- sub_Peg$R_Time
participants$Peg_L_Time[i] <- sub_Peg$L_Time
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
Flam_file <- paste(sub, "Flam", sep="_")
sub_Flam <- read.csv(paste(Flam_file, "csv", sep="."))
participants$Flam_R_Num[i] <- sub_Flam$R_Num
participants$Flam_L_Num[i] <- sub_Flam$Left_Num
participants$Flam_R_Time[i] <- sub_Flam$R_Time
participants$Flam_L_Time[i] <- sub_Flam$Left_Time
Peg_file <- paste(sub, "Peg", sep="_")
sub_Peg <- read.csv(paste(Peg_file, "csv", sep="."))
participants$Peg_R_Time[i] <- sub_Peg$R_Time
participants$Peg_L_Time[i] <- sub_Peg$L_Time
}
View(participants)
hist(participants$DCDQ)
hist(participants$Flam_R_Num)
hist(participants$Flam_L_Num)
hist(participants$Flam_R_Time)
hist(participants$Flam_R_Time)
hist(participants$Flam_L_Time)
hist(participants$Peg_R_Time)
hist(participants$Peg_L_Time)
participants$Flam_R_Num_LOG <- log(participants$Flam_R_Num)
participants$Flam_L_Num_LOG <- log(participants$Flam_L_Num)
participants$Flam_R_Time_LOG <- log(participants$Flam_R_Time)
participants$Flam_L_Time_LOG <- log(participants$Flam_L_Time)
participants$Peg_R_Time_LOG <- log(participants$Peg_R_Time)
participants$Peg_L_Time_LOG <- log(participants$Peg_L_Time)
participants$Flam_R_Num_LOG <- log(participants$Flam_R_Num + 1)
participants$Flam_L_Num_LOG <- log(participants$Flam_L_Num + 1)
participants$Flam_R_Time_LOG <- log(participants$Flam_R_Time + 1)
participants$Flam_L_Time_LOG <- log(participants$Flam_L_Time + 1)
participants$Peg_R_Time_LOG <- log(participants$Peg_R_Time + 1)
participants$Peg_L_Time_LOG <- log(participants$Peg_L_Time + 1)
View(participants)
participants$motor <- rowSums(participants[,21:26])
participants$Flam_R_Time[participants$Flam_R_Time == 0] <- 60.0
participants$Flam_R_Time[participants$Flam_R_Time == 0.00] <- 60.00
View(participants)
participants$Flam_R_Time[participants$Flam_L_Time == 0.00] <- 60.00
View(participants)
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
Flam_file <- paste(sub, "Flam", sep="_")
sub_Flam <- read.csv(paste(Flam_file, "csv", sep="."))
participants$Flam_R_Num[i] <- sub_Flam$R_Num
participants$Flam_L_Num[i] <- sub_Flam$Left_Num
participants$Flam_R_Time[i] <- sub_Flam$R_Time
participants$Flam_L_Time[i] <- sub_Flam$Left_Time
Peg_file <- paste(sub, "Peg", sep="_")
sub_Peg <- read.csv(paste(Peg_file, "csv", sep="."))
participants$Peg_R_Time[i] <- sub_Peg$R_Time
participants$Peg_L_Time[i] <- sub_Peg$L_Time
}
View(participants)
participants$Flam_R_Time[participants$Flam_R_Time == 0.00] <- 60.00
participants$Flam_L_Time[participants$Flam_L_Time == 0.00] <- 60.00
View(participants)
participants$Flam_R_Num_LOG <- log(participants$Flam_R_Num + 1)
participants$Flam_L_Num_LOG <- log(participants$Flam_L_Num + 1)
participants$Flam_R_Time_LOG <- log(participants$Flam_R_Time + 1)
participants$Flam_L_Time_LOG <- log(participants$Flam_L_Time + 1)
participants$Peg_R_Time_LOG <- log(participants$Peg_R_Time + 1)
participants$Peg_L_Time_LOG <- log(participants$Peg_L_Time + 1)
View(participants)
participants[1,23:24]
participants[1,c(21:22, 25:26)]
rowsums(participants[1,23:24])
rowSums(participants[1,c(21:22, 25:26)])
rowSums(participants[1,23:24])
rowSums(participants[1,23:24]) - rowSums(participants[1,c(21:22, 25:26)])
participants$motor <- rowSums(participants[1,23:24]) - rowSums(participants[1,c(21:22, 25:26)])
View(participants)
participants$motor <- rowSums(participants[,23:24]) - rowSums(participants[,c(21:22, 25:26)])
View(participants)
plot(participants$motor, participants$DCDQ)
hist(participants$motor)
cor.test(participants$motor, participants$DCDQ)
cor.test(participants$motor, participants$DCDQ, method = "spearman")
participants$motor <- rowSums(participants[,c(21:22, 25:26)]) - rowSums(participants[,23:24])
View(participants)
install.packages("jmv")
setwd("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data")
?write.csv
write.csv(participants, "data_output.csv", row.names = FALSE)
participants$motor <- rowSums(participants[,23:24]) - rowSums(participants[,c(21:22, 25:26)])
plot(participants$motor, participants$DCDQ)
write.csv(participants, "data_output.csv", row.names = FALSE)
write.csv(participants, "data_output.csv", row.names = FALSE)
write.csv(participants, "data_output.csv", row.names = FALSE)
install.packages("correlation")
library(correlation)
correlation(select = participants$motor, select2 = participants$DCDQ)
participants %>%
correlation(select = "motor", select2 = "DCDQ")
library(tidyverse)
participants %>%
correlation(select = "motor", select2 = "DCDQ")
participants %>%
correlation(select = "motor", select2 = "DCDQ", bayesian = TRUE)
participants %>%
correlation(select = "motor", select2 = "DCDQ", bayesian = TRUE, bayesian_prior = "medium")
participants %>%
correlation(select = "motor", select2 = "DCDQ", bayesian = TRUE, bayesian_prior = "medium.narrow")
participants %>%
correlation(select = "motor", select2 = "DCDQ", bayesian = TRUE, bayesian_prior = "wide")
plot(participants$motor, participants$DCDQ)
ggplot(participants, aes(x=motor, y=DCDQ)) + geom_point()
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size =2)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, se = FALSE)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 3)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 2)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5) +
theme_classic()
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5, color = "black") +
theme_classic()
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5, color = "black") +
theme_classic() +
labs(x = "Motor Coordination Composite Score", y = "DCDQ Questionnaire")
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5, color = "black") +
theme_classic() +
labs(x = "Motor Coordination Composite Score", y = "DCDQ Questionnaire", size = 3)
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5, color = "black") +
theme_classic() +
labs(x = "Motor Coordination Composite Score", y = "DCDQ Questionnaire") +
theme(axis.title = element_text(size = 20))
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5, color = "black") +
theme_classic() +
labs(x = "Motor Coordination Composite Score", y = "DCDQ Questionnaire") +
theme(axis.title = element_text(size = 20), axis.text = element_text(size = 20))
setwd("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data")
library(tidyverse)
library(correlation)
library(psych)
participants <- read.csv("participants.csv")
#Add data from Demographics files
#add columns to be extracted from the Demographics file
participants$sex <- NA
participants$age <- NA
participants$multilingual <- NA
participants$handedness <- NA
participants$dev_cond <- NA
#Extract demographic information about the participants
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
demo_file <- paste(sub, "Demo", sep="_")
sub_demo <- read.csv(paste(demo_file, "csv", sep="."))
participants$sex[i] <- sub_demo$Sex
participants$age[i] <- sub_demo$Age
participants$multilingual[i] <- sub_demo$Multilingual
participants$handedness[i] <- sub_demo$Handedness
participants$dev_cond[i] <- sub_demo$Dev_cond
}
#The gender marker for female was "F" and was read in as FALSE so this needs to be corrected
participants$sex[participants$sex == "FALSE"] <- "F"
sum(participants$sex == "F")
sum(participants$sex == "M")
mean(participants$age)
sd(participants$age)
sum(participants$multilingual)
sum(participants$handedness == "R") + sum(participants$handedness == "r")
# Extract DCDQ Total scores from the DCDQ files
participants$DCDQ <- NA
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
participants$DCDQ[i] <- rowSums(sub_DCDQ[1,3:17])
}
#Extract the motor task scores from the Flamingo and Peg Board files
participants$Flam_R_Num <- NA
participants$Flam_L_Num <- NA
participants$Flam_R_Time <- NA
participants$Flam_L_Time <- NA
participants$Peg_R_Time <- NA
participants$Peg_L_Time <- NA
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
Flam_file <- paste(sub, "Flam", sep="_")
sub_Flam <- read.csv(paste(Flam_file, "csv", sep="."))
participants$Flam_R_Num[i] <- sub_Flam$R_Num
participants$Flam_L_Num[i] <- sub_Flam$Left_Num
participants$Flam_R_Time[i] <- sub_Flam$R_Time
participants$Flam_L_Time[i] <- sub_Flam$Left_Time
Peg_file <- paste(sub, "Peg", sep="_")
sub_Peg <- read.csv(paste(Peg_file, "csv", sep="."))
participants$Peg_R_Time[i] <- sub_Peg$R_Time
participants$Peg_L_Time[i] <- sub_Peg$L_Time
}
#The time measure in the Flamingo test is best when it's long. But the best possible result is recorded as 0 seconds in the file and this was in the case when the child did not put down their leg at all.
#The 0s should be changed to 60s to numerically reflect best performance.
participants$Flam_R_Time[participants$Flam_R_Time == 0.00] <- 60.00
participants$Flam_L_Time[participants$Flam_L_Time == 0.00] <- 60.00
#Log transformation to stadardise the variables
participants$Flam_R_Num_LOG <- log(participants$Flam_R_Num + 1)
participants$Flam_L_Num_LOG <- log(participants$Flam_L_Num + 1)
participants$Flam_R_Time_LOG <- log(participants$Flam_R_Time + 1)
participants$Flam_L_Time_LOG <- log(participants$Flam_L_Time + 1)
participants$Peg_R_Time_LOG <- log(participants$Peg_R_Time + 1)
participants$Peg_L_Time_LOG <- log(participants$Peg_L_Time + 1)
#Calculate the cumulative variable
# The Flam Time variable is beneficial when it's high
# The Flam Number and Peg Time is beneficial when it's low
# Therefore, the Flam Number and Peg Time will be subtracted from Flam Time
# Still, for the overall motor index, larger numbers will reflect better performance
participants$motor <- rowSums(participants[,23:24]) - rowSums(participants[,c(21:22, 25:26)])
#------------For the Report
#Check the DCDQ data
mean(participants$DCDQ)
sd(participants$DCDQ)
min(participants$DCDQ)
head(sort(participants$DCDQ))
max(participants$DCDQ)
#Proportion of children with DCDQ scores in the "probable DCD category"
length(participants$ID[participants$DCDQ < 47])/length(participants$ID) * 100
#DCDQ Reliability
DCDQ <- as.data.frame(matrix(nrow = 36, ncol = 16))
colnames(DCDQ) <- c('ID', 'Item1', 'Item2', 'Item3', 'Item4', 'Item5', 'Item6', 'Item7', 'Item8', 'Item9', 'Item10', 'Item11', 'Item12', 'Item13', 'Item14', 'Item15')
#Extract data for all items for each participant
for (i in 1:length(participants$ID)){
sub <- participants$ID[i]
sub_path <- paste("~/1.Translation_Project/DCDQ_Danish_Translation/Raw Data/", sub, sep="")
setwd(sub_path)
DCDQ_file <- paste(sub, "DCDQ", sep="_")
sub_DCDQ <- read.csv(paste(DCDQ_file, "csv", sep="."))
DCDQ$ID[i] <- sub
DCDQ$Item1[i] <- sub_DCDQ$Q1
DCDQ$Item2[i] <- sub_DCDQ$Q2
DCDQ$Item3[i] <- sub_DCDQ$Q3
DCDQ$Item4[i] <- sub_DCDQ$Q4
DCDQ$Item5[i] <- sub_DCDQ$Q5
DCDQ$Item6[i] <- sub_DCDQ$Q6
DCDQ$Item7[i] <- sub_DCDQ$Q7
DCDQ$Item8[i] <- sub_DCDQ$Q8
DCDQ$Item9[i] <- sub_DCDQ$Q9
DCDQ$Item10[i] <- sub_DCDQ$Q10
DCDQ$Item11[i] <- sub_DCDQ$Q11
DCDQ$Item12[i] <- sub_DCDQ$Q12
DCDQ$Item13[i] <- sub_DCDQ$Q13
DCDQ$Item14[i] <- sub_DCDQ$Q14
DCDQ$Item15[i] <- sub_DCDQ$Q15
}
consistency <- alpha(cov(DCDQ[,2:16]))
#Extract corrected item-total correlations for a table in the report
item_total <- consistency$item.stats[,"r.cor"]
#Extract correlations if item dropped
item_dropped <- consistency$alpha.drop[,"raw_alpha"]
#DCDQ with motor test - validity
#Plot and test DCDQ scores with motor perfomance
ggplot(participants, aes(x=motor, y=DCDQ)) +
geom_point(size=3) +
geom_smooth(method=lm, size = 1.5, color = "black") +
theme_classic() +
labs(x = "Motor Coordination Composite Score", y = "DCDQ Questionnaire") +
theme(axis.title = element_text(size = 20), axis.text = element_text(size = 20))
plot(participants$motor, participants$DCDQ)
cor.test(participants$motor, participants$DCDQ)
cor.test(participants$motor, participants$DCDQ, method = "Spearman")
cor.test(participants$motor, participants$DCDQ, method = "spearman")
hist(participants$motor)
hist(participants$DCDQ)
